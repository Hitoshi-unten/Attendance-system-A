<% provide(:title, "login") %>
<h1>ログイン</h1>

<div class="row">
  <div class="col-md-6 col-md-offset-3">
    <!--Railsのform_tagメソッドを用いることで、入力フォームの投稿内容を送信することができる。
　　次のような記述で送信先を指定することが可能。URL、またはパスを指定する。doとendを忘れないように注意する。-->
　　<!--form_withメソッドを呼び出すときには、このフォームを識別するためのスコープを渡すこと。ここでは:sessionというシンボルを渡します。form_withヘルパーは、これを見て何のフォームであるかを知ることができる。このメソッドのブロックの内側はFormBuilderオブジェクトを置く(formで表すのが通例)。ここでは2つのラベルと2つのテキストフィールドが置かれ、それぞれタイトルと記事本文になる。最後に、formオブジェクトに対してsubmitを実行すると、フォームの送信ボタンが作成される。フォームの送信先は別のURLにする必要がある。送信先の指定はform_withの:urlオプションで簡単に指定できる。Railsでは、新しいフォームの送信先となるアクションは"create"にするのが普通。-->
    <%= form_with(scope: :session, url: login_path, local: true) do |f| %>

      <%= f.label :email, "メールアドレス", class: "label-login" %>
      <%= f.email_field :email, class: 'form-control' %>

      <%= f.label :password, "パスワード", class: "label-login" %>
      <%= f.password_field :password, class: 'form-control' %>

      <%= f.label :remember_me, class: "checkbox inline checkbox-login", for: "remember-me" do %>
        <%= f.check_box :remember_me, id: "remember-me" %>
        <span>ログイン情報を記憶する</span>
      <% end %>

      <%= f.submit "ログイン", class: "btn btn-primary btn-block btn-login" %>
    <% end %>
    <p>
      ユーザー登録がまだの場合は<%= link_to "こちら", signup_path %>
    </p>
    <!--link_toメソッドは、Railsのビルトインヘルパーの1つ。このメソッドは、指定されたテキストに基いたリンクを作成し、ジャンプ先を表示する。ここでは各記事へのパスを指定。-->
  </div>
</div>