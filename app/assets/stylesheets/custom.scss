// 多くのHTML要素にCSSクラスを関連づけた。こうしておくことでCSSベースでレイアウトを構成する際に高い柔軟性を与えてくれる。
// 関連づけたクラスの多くはBootstrap特有のもので、Bootstrapを使うと洗練されたデザインとユーザーインターフェース（UI）を簡単にアプリケーションに追加することができる。（クラスを当てるだけ）
// Bootstrapをgemを使ってRailsアプリケーションに導入。次のコードをGemfileに追加する。gem 'bootstrap-sass'
// gemを追加したらターミナルで$bundle installを実行する。
// これまでに実行したrails generateコマンドでコントローラごとに分けられたCSSファイルが自動的に生成されているが、このチュートリアルでは簡潔に進行するため、全てのCSSを１つにまとめる。
// まとめたCSSを格納しておくファイル（カスタムCSS）を作成しておく。touch app/assets/stylesheets/custom.scssをターミナルで実行する。
// custom.scssにコードを書き加える。２行だけでOK。Bootstrapの威力を確認。ボタンやヘッダーのメリハリなどが良い感じになっている。
// ここから各部位にCSSを改めて当てることで、バランスを整えていく。
@import "bootstrap-sprockets";
@import "bootstrap";

/* universal */

body {
  padding-top: 60px;
}

section {
  overflow: auto;
}

textarea {
  resize: vertical;
}

.center {
  text-align: center;
}

.center h1 {
  margin-bottom: 10px;
}

/* typography */

h1, h2, h3, h4, h5, h6 {
  line-height: 1;
}

h1 {
  font-size: 3em;
  letter-spacing: -2px;
  margin-bottom: 30px;
  text-align: center;
}

h2 {
  font-size: 1.2em;
  letter-spacing: -1px;
  margin-bottom: 30px;
  text-align: center;
  font-weight: normal;
  color: #777;
}

p {
  font-size: 1.1em;
  line-height: 1.7em;
}

/* header */

#logo {
  float: left;
  margin-right: 10px;
  font-size: 1.7em;
  color: #fff;
  text-transform: uppercase;
  letter-spacing: -1px;
  padding-top: 9px;
  font-weight: bold;
}

#logo:hover {
  color: #fff;
  text-decoration: none;
}

/* debug */

.debug_dump {
  clear: both;
  float: left;
  width: 100%;
  margin-top: 45px;
  -moz-box-sizing:    border-box;
  -webkit-box-sizing: border-box;
  box-sizing:         border-box;
}

/* error_messages */

#error_explanation {
  color: red;
  ul {
    color: red;
    margin: 0 0 30px 0;
  }
}

.field_with_errors {
  @extend .has-error;
  .form-control {
    color: $state-danger-text;
  }
}

.modal-dialog-center {
  padding-top: 10%;
}